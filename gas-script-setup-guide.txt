# TeamBase 診断フロー - GASスクリプトセットアップガイド

## 概要
このガイドでは、修正したGASスクリプトのセットアップ方法と、Webアプリからのリクエストを正しく処理するための設定を説明します。

## 主な修正点
1. `doPost(e)` 関数を追加：Webアプリからのリクエストを処理する関数
2. スプレッドシート初期化機能の追加：ヘッダー行の設定や列幅の調整機能を提供
3. エラーハンドリングの強化：メール送信処理に例外処理を追加
4. 管理者へのメール通知機能の強化：会社情報や課題情報も含む詳細なメール通知

## セットアップ手順

### 1. Googleスプレッドシートの作成
1. Googleドライブで新しいスプレッドシートを作成します。
2. 適当な名前を付けて保存します（例：「TeamBase診断フロー回答」）。

### 2. Google Apps Script（GAS）の設定
1. スプレッドシートを開き、メニューから「拡張機能」>「Apps Script」を選択します。
2. 新しいスクリプトエディタが開きます。
3. デフォルトのコードを削除し、`gas-script.txt`の内容をコピー＆ペーストします。
4. スクリプト内の管理者メールアドレス（`adminEmail`変数）を必要に応じて変更します。
5. メニューの「ファイル」>「保存」をクリックしてスクリプトを保存します。
6. 「実行」>「関数を実行」>「setupSheet」を選択し、スプレッドシートを初期化します。

### 3. Webアプリとしてデプロイ
1. スクリプトエディタで「デプロイ」>「新しいデプロイ」をクリックします。
2. 「選択するタイプ」として「ウェブアプリ」を選択します。
3. 必要事項を入力します：
   - 説明文：「TeamBase診断フローアプリ」など
   - 次のユーザーとして実行：「自分（yourname@gmail.com）」
   - アクセスできるユーザー：「全員（匿名を含む）」
4. 「デプロイ」をクリックします。
5. アクセス権の承認を求められたら「許可」をクリックします。
6. デプロイが完了するとWebアプリのURLが表示されます。このURLをコピーします。

### 4. HTML側の設定
1. 診断フローのHTMLファイル（diagnosis-step3.html）内の`GAS_URL`変数の値を、コピーしたWebアプリのURLに更新します。

```javascript
const GAS_URL = 'https://script.google.com/macros/s/..../exec';  // コピーしたURLに置き換え
```

2. HTMLファイルを保存してサーバーにアップロードします。

### 5. テストと確認
1. ブラウザで診断フローを開き、全ステップを入力して送信します。
2. スプレッドシートを確認し、データが正しく追加されているか確認します。
3. 管理者メールと回答者メールが送信されたことを確認します。

## トラブルシューティング

### データがスプレッドシートに表示されない場合
1. スクリプトエディタで「表示」>「実行ログ」を確認し、エラーメッセージを確認します。
2. WebアプリのURLが正しくHTMLファイルに設定されているか確認します。
3. デプロイの設定で「アクセスできるユーザー」が「全員（匿名を含む）」になっているか確認します。
4. ブラウザのコンソール（F12）でネットワークリクエストを確認し、POSTリクエストが正しく送信されているか確認します。

### メールが送信されない場合
1. スクリプトの実行権限が正しく設定されているか確認します。
2. スクリプトエディタの「表示」>「実行ログ」でエラーメッセージを確認します。
3. 1日のメール送信制限（無料版GoogleアカウントではGASからのメール送信は1日100件まで）を超えていないか確認します。

## 重要な注意事項
- GASのWebアプリURLは、再デプロイする度に変更される場合があります。再デプロイ後は必ずHTMLファイルのURLも更新してください。
- 無料版のGoogleアカウントでは、GASからのメール送信は1日100件までという制限があります。
- スプレッドシートへのアクセス権限がGASに付与されていることを確認してください。 